{# templates/lucky_number.html.twig #}

{% include 'base.html.twig' %}

<body>
    {% include 'nav.twig' %}
    <div class="container">
        <h2>Report</h2>
        <h3>KMOM01</h3>
        <p>De kunskaper jag har inom objektorientering sedan tidigare är det som jag har lärt mig i tidigare kurser
            inom Webbprogrammering på Bth. Innan denna kurs läste jag objektorienterad Python och har även läst lite
            inom JavaScript i vintras.</p>
        <p>För att komma igång och skapa sina första klasser måste man måste förstå själva uppgyggnaden av hur en
            klass fungerar. Jag ser det som att klass är som en mall
            för hur ett objekt ska kunna skapas. När man skapar en klass instansieras ett objekt av klassen som går
            efter mallen hur klassen är uppbyggd. </p>
        <p>Jag tycker den var ganska svår att förstå sig på då man fick försöka klura ut saker på egen hand denna
            gång när man inte hade en mall som man tidigare brukar ha att gå efter. Eftersom jag är lite bekant med
            objektorientering innan är det lättare att förstå hur objektorientering fungerar i PHP, även att jag
            tycker det verkar lite klurigare än hur jag har använt det innan. Normalt sett tycker jag det är jättekul
            att designa webbsidor men jag känner att det fick komma i andra hand denna gång, det vill säga strukruren på
            css-koden och sidans responsivitet. Jag känner att jag ville lägga mest energi på att få alla delar att
            faktiskt fungera då jag hade ganska mycket problem med det vilket gjorde att jag fick avinstallera och
            ominstallera symfony flera gånger för att börja om på ny kula. </p>
        <p>Just när det kommer till programmering lär jag mig inte lika mycket när jag sitter och läser ett långt
            dokument utan att få göra det praktiskt så därav skummade jag bara artikeln lite snabbt utan att läsa
            den allt för djupt. Jag tycker ändå att det finns många värdefulla delar i artikeln som går att ha
            användning av när man ska skriva sin kod som man lätt kan kolla upp och få svar på. Eftersom jag inte är
            så insatt i PHP sedan tidigare (förutom webtec-kursen i höstas jag läste) är kapitlet om “the basics”
            mest värdefullt för mig för tillfället. Jag har användning av det för att kunna repetera och lära mig
            grunderna i Php eftersom jag inte tyckte det satte sig tillräckligt sist. Jag tycker även det är bra att
            artikeln har länka i sig och hänvisar vidare till exempelvis manualen om man vill lära sig om till
            exempel objektorienterad PHP.</p>
        <p>Mitt TIL är hela grejen med Symfony. Jag känner absolut inte att jag kan det eller förstår det än, men
            det är ju bara första veckan så jag antar att det kommer sätta sig lite längre fram. Jag är fortfarande
            ganska osäker på vad jag håller på med. Har försökt att läsa lite mer på webben för att få ett
            sammanhang, men det skulle jag kunna fortsätta med hur länge som helst eftersom det känns så brett.
            Därför får jag nöja mig med att känna att jag i alla fall har kommit igång och fått en överblick om vad
            kursen kommer innehålla.</p>
        <h3>KMOM02</h3>
        <p>Arv innebär att vi kan använda kod från en annan klass i en ny klass för att slippa återanvända koden. Det
            finns en förälderklass som har metoder och en barnklass som kan använda dessa metoder.
            Kompostion innebär att det finns ett starkt beroende mellan objekten. Den ena kan inte existera utan den
            andra. Interface är en struktur som visar vad som förväntas finnas med i koden. Till exempel att en klass
            ska innehålla specifika metoder. Ett trait är likt arv och består av bland annat metoder som kan ”kopieras”
            in i andra klasser. </p>

        <p>Eftersom veckans uppgift var så pass stor kändes det omöjligt att kunna göra allt utförligt på så pass kort
            tid. Det var så mycket nytt att lära och det kändes som man kastades in i ett stort projekt utan att
            grunderna hunnit sitta. Jag försökte ta uppgifterna steg för steg och börja med grunderna. Av någon
            anledning var jag tvungen att ominstallera Symfony och börja om från början när jag nästan var klar då mitt
            dbwebb-kommando slutade fungera. Därav fick jag göra ett nytt GitHub-repo (mvc-report, tidigare report) då
            det inte gick att committa mina filer till mitt gamla repo. Därför har jag bara commits och tags från detta
            kursmoment, de andra ligger kvar i mitt gamla repo. Jag känner väl ändå relativt nöjd med min kod då jag har
            lagt många timmar på den. Det jag hade kunnat göra bättre är att sätta mig in i hur arv fungerar lite mer
            men jag antar att det kommer sätta sig mer och mer för varje vecka. Denna vecka ville jag fokusera på att
            förstå hur grunderna och syntaxen ser ut i klasser i Php och hur de fungerar med att kunna rendera det som
            returneras som variabler på själva webbsidan. Jag hade kanske även kunnat fixa så man inte behöver göra en
            hard reset när man är i shuffle card för att sessionen ska avslutas men jag känner att tiden inte räcker
            till för det. Jag vill kunna vara klar tills veckan är slut så jag inte hamnar efter nästa vecka. </p>


        <p>Jag tyckte det var ganska svårt att modellera ett kortspel med flödesdiagram och pseudokod. Flödesdiagram var
            relativt enkelt att förstå och göra ett diagram utefter det men pseudokoden fattade jag inte riktigt hur jag
            skulle skriva och om det var rätt. Därför skrev jag min kod så som jag tänkte i huvudet. Eftersom jag tyckte
            veckans uppgift var svår var det svårt att försöka visualisera sig en ny kod när jag knappt känner att jag
            hunnit veckans kod sjunka in och satt sig. </p>

        <p>Mitt TIL är att testa min kod efter varje liten del jag lägger till. Ibland kan det varit så att jag lagt
            till ett lite längre stycke som jag tänker ska fungera som inte gör det och då får jag backa tillbaka alla
            steg för att se vad som är fel. Då är det bättre att lägga till en del i taget och kolla så allt fungerar.
        </p>
    </div>

    {% include 'footer.twig' %}
</body>